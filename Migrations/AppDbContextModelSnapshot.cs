// <auto-generated />
using System;
using CalculateNetworth.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalculateNetworth.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalculateNetworth.Models.AssetSaleResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("NetWorth")
                        .HasColumnType("float");

                    b.Property<bool>("SaleStatus")
                        .HasColumnType("bit");

                    b.HasKey("ResponseId");

                    b.ToTable("AssetSaleResponses");
                });

            modelBuilder.Entity("CalculateNetworth.Models.MutualFundDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MutualFundName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MutualFundUnits")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioDetailPortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioDetailPortfolioId");

                    b.ToTable("MutualFundDetails");
                });

            modelBuilder.Entity("CalculateNetworth.Models.PortfolioDetail", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortfolioId");

                    b.ToTable("PortfolioDetails");
                });

            modelBuilder.Entity("CalculateNetworth.Models.StockInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PortfolioDetailPortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("Profile_Id")
                        .HasColumnType("int");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioDetailPortfolioId");

                    b.ToTable("StockInfo");
                });

            modelBuilder.Entity("CalculateNetworth.Models.MutualFundDetail", b =>
                {
                    b.HasOne("CalculateNetworth.Models.PortfolioDetail", null)
                        .WithMany("MutualFundList")
                        .HasForeignKey("PortfolioDetailPortfolioId");
                });

            modelBuilder.Entity("CalculateNetworth.Models.StockInfo", b =>
                {
                    b.HasOne("CalculateNetworth.Models.PortfolioDetail", null)
                        .WithMany("StockList")
                        .HasForeignKey("PortfolioDetailPortfolioId");
                });

            modelBuilder.Entity("CalculateNetworth.Models.PortfolioDetail", b =>
                {
                    b.Navigation("MutualFundList");

                    b.Navigation("StockList");
                });
#pragma warning restore 612, 618
        }
    }
}
